# -*- coding: utf-8 -*-
"""MNIST_ArtaGhasemi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PrbH18vGlaHiVz7hGUzqVW-W-lSe7RlJ
"""

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras import layers
import matplotlib.pyplot as plt

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()
x_train = tf.keras.utils.normalize(x_train, axis=1)
x_test = tf.keras.utils.normalize(x_test, axis=1)

plt.imshow(x_train[0], cmap = 'gray')

#define your model here. ie, "model = <tensorflow syntax for sequential model>"
model = tf.keras.models.Sequential()

#create your model here
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128,activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(128,activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(10,activation=tf.nn.softmax))

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train,y_train,epochs=3)

val_loss, val_acc = model.evaluate(x_test,y_test)

"""View your model in action"""

number_of_images = 10

probabilities = model.predict(x_train[:number_of_images])
predictions = np.argmax(probabilities, axis=1)
for index in range(len(probabilities)):
  plt.imshow(x_train[index], cmap='gray')
  plt.show()
  print("Prediction: ", predictions[index])

"""Look at incorrect predictions:"""